# -*- coding: utf-8 -*-
"""Map_reduce_concept.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jS0OA-RmFmG8M9DqUnmXEsvky3yvz3M2
"""

import pandas as pd

def preprocess(file_path):
  with open(file_path, 'r') as f:
    list_data = f.readlines()
    final_data = [i.replace('\n', ' ').lower() for i in list_data]
    final_data.remove(' ')
    return final_data


def map_phase(final_data):
  list_wc = []
  df = pd.DataFrame()
  for i in final_data:
    for each_word in i.replace(',', '').replace('.', '').replace('!', '').replace(':', '').replace('"', '').replace('**', '').replace('--', '').split():
      stripped_word = each_word.strip()
      list_wc.append(stripped_word)
  
  df['word']= list_wc
  df['count'] = 1
  # print(df)
  df = df.groupby('word')['count'].apply(list)
  return df

def reducer_phase(mapped_data):
  final_data = mapped_data.apply(len).to_frame().sort_values(by='count', ascending=False)
  final_data.to_csv('/content/reducer_output.csv')

if __name__ == '__main__':
  final_preprocessed_data = preprocess('/content/Martin_luther_king_jr_speech.txt')
  mapped_output = map_phase(final_preprocessed_data)
  reducer_phase(mapped_output)